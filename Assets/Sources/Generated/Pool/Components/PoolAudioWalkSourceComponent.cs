//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class PoolEntity {

    public AudioWalkSourceComponent audioWalkSource { get { return (AudioWalkSourceComponent)GetComponent(PoolComponentsLookup.AudioWalkSource); } }
    public bool hasAudioWalkSource { get { return HasComponent(PoolComponentsLookup.AudioWalkSource); } }

    public void AddAudioWalkSource(Audio[] newClips, bool newRandomizePitch) {
        var index = PoolComponentsLookup.AudioWalkSource;
        var component = CreateComponent<AudioWalkSourceComponent>(index);
        component.clips = newClips;
        component.randomizePitch = newRandomizePitch;
        AddComponent(index, component);
    }

    public void ReplaceAudioWalkSource(Audio[] newClips, bool newRandomizePitch) {
        var index = PoolComponentsLookup.AudioWalkSource;
        var component = CreateComponent<AudioWalkSourceComponent>(index);
        component.clips = newClips;
        component.randomizePitch = newRandomizePitch;
        ReplaceComponent(index, component);
    }

    public void RemoveAudioWalkSource() {
        RemoveComponent(PoolComponentsLookup.AudioWalkSource);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class PoolMatcher {

    static Entitas.IMatcher<PoolEntity> _matcherAudioWalkSource;

    public static Entitas.IMatcher<PoolEntity> AudioWalkSource {
        get {
            if (_matcherAudioWalkSource == null) {
                var matcher = (Entitas.Matcher<PoolEntity>)Entitas.Matcher<PoolEntity>.AllOf(PoolComponentsLookup.AudioWalkSource);
                matcher.componentNames = PoolComponentsLookup.componentNames;
                _matcherAudioWalkSource = matcher;
            }

            return _matcherAudioWalkSource;
        }
    }
}
