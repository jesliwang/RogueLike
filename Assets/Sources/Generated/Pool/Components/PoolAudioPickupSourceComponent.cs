//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class PoolEntity {

    public AudioPickupSourceComponent audioPickupSource { get { return (AudioPickupSourceComponent)GetComponent(PoolComponentsLookup.AudioPickupSource); } }
    public bool hasAudioPickupSource { get { return HasComponent(PoolComponentsLookup.AudioPickupSource); } }

    public void AddAudioPickupSource(Audio[] newClips, bool newRandomizePitch) {
        var index = PoolComponentsLookup.AudioPickupSource;
        var component = CreateComponent<AudioPickupSourceComponent>(index);
        component.clips = newClips;
        component.randomizePitch = newRandomizePitch;
        AddComponent(index, component);
    }

    public void ReplaceAudioPickupSource(Audio[] newClips, bool newRandomizePitch) {
        var index = PoolComponentsLookup.AudioPickupSource;
        var component = CreateComponent<AudioPickupSourceComponent>(index);
        component.clips = newClips;
        component.randomizePitch = newRandomizePitch;
        ReplaceComponent(index, component);
    }

    public void RemoveAudioPickupSource() {
        RemoveComponent(PoolComponentsLookup.AudioPickupSource);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class PoolMatcher {

    static Entitas.IMatcher<PoolEntity> _matcherAudioPickupSource;

    public static Entitas.IMatcher<PoolEntity> AudioPickupSource {
        get {
            if (_matcherAudioPickupSource == null) {
                var matcher = (Entitas.Matcher<PoolEntity>)Entitas.Matcher<PoolEntity>.AllOf(PoolComponentsLookup.AudioPickupSource);
                matcher.componentNames = PoolComponentsLookup.componentNames;
                _matcherAudioPickupSource = matcher;
            }

            return _matcherAudioPickupSource;
        }
    }
}
