//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class PoolContext {

    public PoolEntity viewContainerEntity { get { return GetGroup(PoolMatcher.ViewContainer).GetSingleEntity(); } }
    public ViewContainerComponent viewContainer { get { return viewContainerEntity.viewContainer; } }
    public bool hasViewContainer { get { return viewContainerEntity != null; } }

    public PoolEntity SetViewContainer(UnityEngine.Transform newValue) {
        if (hasViewContainer) {
            throw new Entitas.EntitasException("Could not set ViewContainer!\n" + this + " already has an entity with ViewContainerComponent!",
                "You should check if the context already has a viewContainerEntity before setting it or use context.ReplaceViewContainer().");
        }
        var entity = CreateEntity();
        entity.AddViewContainer(newValue);
        return entity;
    }

    public void ReplaceViewContainer(UnityEngine.Transform newValue) {
        var entity = viewContainerEntity;
        if (entity == null) {
            entity = SetViewContainer(newValue);
        } else {
            entity.ReplaceViewContainer(newValue);
        }
    }

    public void RemoveViewContainer() {
        viewContainerEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class PoolEntity {

    public ViewContainerComponent viewContainer { get { return (ViewContainerComponent)GetComponent(PoolComponentsLookup.ViewContainer); } }
    public bool hasViewContainer { get { return HasComponent(PoolComponentsLookup.ViewContainer); } }

    public void AddViewContainer(UnityEngine.Transform newValue) {
        var index = PoolComponentsLookup.ViewContainer;
        var component = CreateComponent<ViewContainerComponent>(index);
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceViewContainer(UnityEngine.Transform newValue) {
        var index = PoolComponentsLookup.ViewContainer;
        var component = CreateComponent<ViewContainerComponent>(index);
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveViewContainer() {
        RemoveComponent(PoolComponentsLookup.ViewContainer);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class PoolMatcher {

    static Entitas.IMatcher<PoolEntity> _matcherViewContainer;

    public static Entitas.IMatcher<PoolEntity> ViewContainer {
        get {
            if (_matcherViewContainer == null) {
                var matcher = (Entitas.Matcher<PoolEntity>)Entitas.Matcher<PoolEntity>.AllOf(PoolComponentsLookup.ViewContainer);
                matcher.componentNames = PoolComponentsLookup.componentNames;
                _matcherViewContainer = matcher;
            }

            return _matcherViewContainer;
        }
    }
}
