//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class PoolEntity {

    public TurnBasedComponent turnBased { get { return (TurnBasedComponent)GetComponent(PoolComponentsLookup.TurnBased); } }
    public bool hasTurnBased { get { return HasComponent(PoolComponentsLookup.TurnBased); } }

    public void AddTurnBased(int newIndex, float newDelay) {
        var index = PoolComponentsLookup.TurnBased;
        var component = CreateComponent<TurnBasedComponent>(index);
        component.index = newIndex;
        component.delay = newDelay;
        AddComponent(index, component);
    }

    public void ReplaceTurnBased(int newIndex, float newDelay) {
        var index = PoolComponentsLookup.TurnBased;
        var component = CreateComponent<TurnBasedComponent>(index);
        component.index = newIndex;
        component.delay = newDelay;
        ReplaceComponent(index, component);
    }

    public void RemoveTurnBased() {
        RemoveComponent(PoolComponentsLookup.TurnBased);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class PoolMatcher {

    static Entitas.IMatcher<PoolEntity> _matcherTurnBased;

    public static Entitas.IMatcher<PoolEntity> TurnBased {
        get {
            if (_matcherTurnBased == null) {
                var matcher = (Entitas.Matcher<PoolEntity>)Entitas.Matcher<PoolEntity>.AllOf(PoolComponentsLookup.TurnBased);
                matcher.componentNames = PoolComponentsLookup.componentNames;
                _matcherTurnBased = matcher;
            }

            return _matcherTurnBased;
        }
    }
}
