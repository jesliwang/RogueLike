//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class PoolContext {

    public PoolEntity gameBoardCacheEntity { get { return GetGroup(PoolMatcher.GameBoardCache).GetSingleEntity(); } }
    public GameBoardCacheComponent gameBoardCache { get { return gameBoardCacheEntity.gameBoardCache; } }
    public bool hasGameBoardCache { get { return gameBoardCacheEntity != null; } }

    public PoolEntity SetGameBoardCache(System.Collections.Generic.ICollection<PoolEntity>[,] newGrid) {
        if (hasGameBoardCache) {
            throw new Entitas.EntitasException("Could not set GameBoardCache!\n" + this + " already has an entity with GameBoardCacheComponent!",
                "You should check if the context already has a gameBoardCacheEntity before setting it or use context.ReplaceGameBoardCache().");
        }
        var entity = CreateEntity();
        entity.AddGameBoardCache(newGrid);
        return entity;
    }

    public void ReplaceGameBoardCache(System.Collections.Generic.ICollection<PoolEntity>[,] newGrid) {
        var entity = gameBoardCacheEntity;
        if (entity == null) {
            entity = SetGameBoardCache(newGrid);
        } else {
            entity.ReplaceGameBoardCache(newGrid);
        }
    }

    public void RemoveGameBoardCache() {
        gameBoardCacheEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class PoolEntity {

    public GameBoardCacheComponent gameBoardCache { get { return (GameBoardCacheComponent)GetComponent(PoolComponentsLookup.GameBoardCache); } }
    public bool hasGameBoardCache { get { return HasComponent(PoolComponentsLookup.GameBoardCache); } }

    public void AddGameBoardCache(System.Collections.Generic.ICollection<PoolEntity>[,] newGrid) {
        var index = PoolComponentsLookup.GameBoardCache;
        var component = CreateComponent<GameBoardCacheComponent>(index);
        component.grid = newGrid;
        AddComponent(index, component);
    }

    public void ReplaceGameBoardCache(System.Collections.Generic.ICollection<PoolEntity>[,] newGrid) {
        var index = PoolComponentsLookup.GameBoardCache;
        var component = CreateComponent<GameBoardCacheComponent>(index);
        component.grid = newGrid;
        ReplaceComponent(index, component);
    }

    public void RemoveGameBoardCache() {
        RemoveComponent(PoolComponentsLookup.GameBoardCache);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class PoolMatcher {

    static Entitas.IMatcher<PoolEntity> _matcherGameBoardCache;

    public static Entitas.IMatcher<PoolEntity> GameBoardCache {
        get {
            if (_matcherGameBoardCache == null) {
                var matcher = (Entitas.Matcher<PoolEntity>)Entitas.Matcher<PoolEntity>.AllOf(PoolComponentsLookup.GameBoardCache);
                matcher.componentNames = PoolComponentsLookup.componentNames;
                _matcherGameBoardCache = matcher;
            }

            return _matcherGameBoardCache;
        }
    }
}
