//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class PoolContext {

    public PoolEntity turnOrderEntity { get { return GetGroup(PoolMatcher.TurnOrder).GetSingleEntity(); } }
    public TurnOrderComponent turnOrder { get { return turnOrderEntity.turnOrder; } }
    public bool hasTurnOrder { get { return turnOrderEntity != null; } }

    public PoolEntity SetTurnOrder(System.Collections.Generic.LinkedList<PoolEntity> newValue) {
        if (hasTurnOrder) {
            throw new Entitas.EntitasException("Could not set TurnOrder!\n" + this + " already has an entity with TurnOrderComponent!",
                "You should check if the context already has a turnOrderEntity before setting it or use context.ReplaceTurnOrder().");
        }
        var entity = CreateEntity();
        entity.AddTurnOrder(newValue);
        return entity;
    }

    public void ReplaceTurnOrder(System.Collections.Generic.LinkedList<PoolEntity> newValue) {
        var entity = turnOrderEntity;
        if (entity == null) {
            entity = SetTurnOrder(newValue);
        } else {
            entity.ReplaceTurnOrder(newValue);
        }
    }

    public void RemoveTurnOrder() {
        turnOrderEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class PoolEntity {

    public TurnOrderComponent turnOrder { get { return (TurnOrderComponent)GetComponent(PoolComponentsLookup.TurnOrder); } }
    public bool hasTurnOrder { get { return HasComponent(PoolComponentsLookup.TurnOrder); } }

    public void AddTurnOrder(System.Collections.Generic.LinkedList<PoolEntity> newValue) {
        var index = PoolComponentsLookup.TurnOrder;
        var component = CreateComponent<TurnOrderComponent>(index);
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceTurnOrder(System.Collections.Generic.LinkedList<PoolEntity> newValue) {
        var index = PoolComponentsLookup.TurnOrder;
        var component = CreateComponent<TurnOrderComponent>(index);
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveTurnOrder() {
        RemoveComponent(PoolComponentsLookup.TurnOrder);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class PoolMatcher {

    static Entitas.IMatcher<PoolEntity> _matcherTurnOrder;

    public static Entitas.IMatcher<PoolEntity> TurnOrder {
        get {
            if (_matcherTurnOrder == null) {
                var matcher = (Entitas.Matcher<PoolEntity>)Entitas.Matcher<PoolEntity>.AllOf(PoolComponentsLookup.TurnOrder);
                matcher.componentNames = PoolComponentsLookup.componentNames;
                _matcherTurnOrder = matcher;
            }

            return _matcherTurnOrder;
        }
    }
}
