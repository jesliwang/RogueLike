//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class PoolEntity {

    public FoodComponent food { get { return (FoodComponent)GetComponent(PoolComponentsLookup.Food); } }
    public bool hasFood { get { return HasComponent(PoolComponentsLookup.Food); } }

    public void AddFood(int newPoints) {
        var index = PoolComponentsLookup.Food;
        var component = CreateComponent<FoodComponent>(index);
        component.points = newPoints;
        AddComponent(index, component);
    }

    public void ReplaceFood(int newPoints) {
        var index = PoolComponentsLookup.Food;
        var component = CreateComponent<FoodComponent>(index);
        component.points = newPoints;
        ReplaceComponent(index, component);
    }

    public void RemoveFood() {
        RemoveComponent(PoolComponentsLookup.Food);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class PoolMatcher {

    static Entitas.IMatcher<PoolEntity> _matcherFood;

    public static Entitas.IMatcher<PoolEntity> Food {
        get {
            if (_matcherFood == null) {
                var matcher = (Entitas.Matcher<PoolEntity>)Entitas.Matcher<PoolEntity>.AllOf(PoolComponentsLookup.Food);
                matcher.componentNames = PoolComponentsLookup.componentNames;
                _matcherFood = matcher;
            }

            return _matcherFood;
        }
    }
}
