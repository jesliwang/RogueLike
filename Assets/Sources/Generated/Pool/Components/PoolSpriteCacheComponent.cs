//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class PoolContext {

    public PoolEntity spriteCacheEntity { get { return GetGroup(PoolMatcher.SpriteCache).GetSingleEntity(); } }
    public SpriteCacheComponent spriteCache { get { return spriteCacheEntity.spriteCache; } }
    public bool hasSpriteCache { get { return spriteCacheEntity != null; } }

    public PoolEntity SetSpriteCache(System.Collections.Generic.IDictionary<string, UnityEngine.Sprite> newValue) {
        if (hasSpriteCache) {
            throw new Entitas.EntitasException("Could not set SpriteCache!\n" + this + " already has an entity with SpriteCacheComponent!",
                "You should check if the context already has a spriteCacheEntity before setting it or use context.ReplaceSpriteCache().");
        }
        var entity = CreateEntity();
        entity.AddSpriteCache(newValue);
        return entity;
    }

    public void ReplaceSpriteCache(System.Collections.Generic.IDictionary<string, UnityEngine.Sprite> newValue) {
        var entity = spriteCacheEntity;
        if (entity == null) {
            entity = SetSpriteCache(newValue);
        } else {
            entity.ReplaceSpriteCache(newValue);
        }
    }

    public void RemoveSpriteCache() {
        spriteCacheEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class PoolEntity {

    public SpriteCacheComponent spriteCache { get { return (SpriteCacheComponent)GetComponent(PoolComponentsLookup.SpriteCache); } }
    public bool hasSpriteCache { get { return HasComponent(PoolComponentsLookup.SpriteCache); } }

    public void AddSpriteCache(System.Collections.Generic.IDictionary<string, UnityEngine.Sprite> newValue) {
        var index = PoolComponentsLookup.SpriteCache;
        var component = CreateComponent<SpriteCacheComponent>(index);
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceSpriteCache(System.Collections.Generic.IDictionary<string, UnityEngine.Sprite> newValue) {
        var index = PoolComponentsLookup.SpriteCache;
        var component = CreateComponent<SpriteCacheComponent>(index);
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveSpriteCache() {
        RemoveComponent(PoolComponentsLookup.SpriteCache);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class PoolMatcher {

    static Entitas.IMatcher<PoolEntity> _matcherSpriteCache;

    public static Entitas.IMatcher<PoolEntity> SpriteCache {
        get {
            if (_matcherSpriteCache == null) {
                var matcher = (Entitas.Matcher<PoolEntity>)Entitas.Matcher<PoolEntity>.AllOf(PoolComponentsLookup.SpriteCache);
                matcher.componentNames = PoolComponentsLookup.componentNames;
                _matcherSpriteCache = matcher;
            }

            return _matcherSpriteCache;
        }
    }
}
