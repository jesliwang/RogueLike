//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGenerator.ComponentExtensionsGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Entitas;

namespace Entitas {

    public partial class Entity {

        public RotateComponent rotate { get { return (RotateComponent)GetComponent(BulletsComponentIds.Rotate); } }
        public bool hasRotate { get { return HasComponent(BulletsComponentIds.Rotate); } }

        public Entity AddRotate(UnityEngine.Vector3 newValue) {
            var component = CreateComponent<RotateComponent>(BulletsComponentIds.Rotate);
            component.value = newValue;
            return AddComponent(BulletsComponentIds.Rotate, component);
        }

        public Entity ReplaceRotate(UnityEngine.Vector3 newValue) {
            var component = CreateComponent<RotateComponent>(BulletsComponentIds.Rotate);
            component.value = newValue;
            ReplaceComponent(BulletsComponentIds.Rotate, component);
            return this;
        }

        public Entity RemoveRotate() {
            return RemoveComponent(BulletsComponentIds.Rotate);
        }
    }
}

    public partial class BulletsMatcher {

        static IMatcher _matcherRotate;

        public static IMatcher Rotate {
            get {
                if(_matcherRotate == null) {
                    var matcher = (Matcher)Matcher.AllOf(BulletsComponentIds.Rotate);
                    matcher.componentNames = BulletsComponentIds.componentNames;
                    _matcherRotate = matcher;
                }

                return _matcherRotate;
            }
        }
    }

    public partial class CoreMatcher {

        static IMatcher _matcherRotate;

        public static IMatcher Rotate {
            get {
                if(_matcherRotate == null) {
                    var matcher = (Matcher)Matcher.AllOf(CoreComponentIds.Rotate);
                    matcher.componentNames = CoreComponentIds.componentNames;
                    _matcherRotate = matcher;
                }

                return _matcherRotate;
            }
        }
    }
